#!/bin/bash
set -e
trap '
    [ ok = "$success" ] || err FAILED.  # First, in case anything after fails.
    [ -n "$test_server_pid" ] && kill "$test_server_pid"
' 0

err() { echo 1>&2 "$@"; exit 1; }

start_test_server() {
    local port="$1"
    node src/jsws.js "$port" &
    test_server_pid=$!
    # XXX The server should properly daemonize and return only when it's
    # able to set requests. Quick wait hack here until we get that working.
    sleep 0.3
}

assert_equal() {
    local expected="$1"
    local actual="$2"
    [ "$expected" = "$actual" ] || {
        err "assert_equal failure.
Expected: $expected
  Actual: $actual
"
    }
}

assert_equal v5. "$(node --version | cut -c 1-3)"
test_listen_port=12345
start_test_server $test_listen_port
actual="$(curl -S -s http://127.0.0.1:$test_listen_port/test.txtXXX)"
assert_equal Hello. "$actual"

success=ok
